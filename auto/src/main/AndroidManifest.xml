<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!--
    Since this module contains code exclusive to Android Automotive, require the feature here.

    If you were mixing projected and automotive code, then the feature should not be marked
    as required.
    -->
    <uses-feature
        android:name="android.hardware.type.automotive"
        android:required="true" />

    <uses-sdk tools:overrideLibrary="androidx.car" />

    <uses-feature
        android:name="android.hardware.wifi"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.screen.portrait"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.screen.landscape"
        android:required="false" />

    <application
        android:allowBackup="true"
        android:appCategory="audio"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:ignore="GoogleAppIndexingWarning">

        <meta-data
            android:name="com.android.automotive"
            android:resource="@xml/automotive_app_desc" />

        <activity
            android:name="com.example.android.uamp.automotive.SignInActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.ACTION_SIGN_IN" />
            </intent-filter>
        </activity>

        <!-- Car compatible theme must use minSDK24 -->
        <activity
            android:name="com.example.android.uamp.automotive.SettingsActivity"
            android:label="@string/settings_label"
            android:theme="@style/AppTheme.Drawer"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.APPLICATION_PREFERENCES" />
            </intent-filter>
        </activity>

        <service
            android:name="com.example.android.uamp.automotive.AutomotiveMusicService"
            android:enabled="true"
            android:exported="true"
            android:foregroundServiceType="mediaPlayback"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="androidx.media3.session.MediaLibraryService"/>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>
    </application>
</manifest>

<!--
    <manifest xmlns:android="http://schemas.android.com/apk/res/android">

        <uses-feature
            android:name="android.hardware.type.automotive"
            android:required="true" />

        <application
            android:allowBackup="true"
            android:appCategory="audio"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:roundIcon="@mipmap/ic_launcher_round"
            android:supportsRtl="true"
            android:theme="@style/Theme.Navegacion">
            <meta-data
                android:name="com.google.android.gms.car.application"
                android:resource="@xml/automotive_app_desc" />
-->
            <!--
                 Use this meta data to override the theme from which Android Auto will
                 look for colors. If you don"t set this, Android Auto will look
                 for color attributes in your application theme.
            -->
<!--
         <meta-data
             android:name="com.google.android.gms.car.application.theme"
             android:resource="@style/CarTheme" />
-->
         <!--
          Main music service, provides media browsing and media playback services to
          consumers through MediaBrowserService and MediaSession. Consumers connect to it through
          MediaBrowser (for browsing) and MediaController (for playback control)
         -->
<!--
         <service
             android:name=".MyMusicService"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.media.browse.MediaBrowserService" />
             </intent-filter>
         </service>
     </application>

 </manifest>
-->